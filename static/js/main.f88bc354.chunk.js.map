{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["num","btn","audio","Audio","i","App","state","gameover","start","myTurn","style","myArr","machineArr","score","divId","src","otherSounds","initialState","playAudio","Math","floor","random","push","setState","console","log","setTimeout","playArrAudio","length","load","play","document","getElementById","classList","add","remove","addEventListener","downHnadler","e","indexOf","target","id","x","JSON","stringify","y","upHnadler","startHandler","className","this","display","onClick","onMouseDown","onMouseUp","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f88bc354.chunk.js","sourcesContent":["import { Component } from 'react';\nimport'./App.css';\nlet num;\nlet btn;\nlet audio = new Audio()\nlet i=0;\nclass App extends Component {\n  state={\n    gameover:false,\n    start:false,\n    myTurn:false,\n    style:null,\n    myArr:[],\n    machineArr:[],\n    score:0,\n    divId:['zero','one','two','three'],\n    src:['assets/0.mp3','assets/1.mp3','assets/2.mp3','assets/3.mp3'],\n    otherSounds:['assets/start.wav','assets/lost.wav'],\n    initialState:this.state\n   }\n   playAudio=()=>{\n\n      num = Math.floor(Math.random()*4)\n     this.state.machineArr.push(num)\n     this.setState({machineArr:this.state.machineArr})\n     console.log(this.state.machineArr);\n       i=0;\n       setTimeout(() => {\n         this.playArrAudio()\n         \n       }, 1000);\n    }\n    playArrAudio=()=>{\n      if(i<this.state.machineArr.length){\n                 audio.src = this.state.src[this.state.machineArr[i]]\n                 audio.load()\n                  audio.play();\n                   btn = document.getElementById(this.state.divId[this.state.machineArr[i]])\n                  btn.classList.add('down')\n                  setTimeout(() => {\n                    btn.classList.remove('down')\n                  }, 300);\n\n                  i =i+1;\n                 } \n                audio.addEventListener('ended', this.playArrAudio); \n                if(i===this.state.machineArr.length){this.setState({myTurn:true})\n                }\n   }            \n    \ndownHnadler=(e)=>{\n  // audio.currentTime = 0\n  // if(this.state.gameover){return}\n  \n   num = this.state.divId.indexOf(e.target.id);\n  audio.src = this.state.src[num]\n  if(this.state.start && this.state.myTurn){\n    audio.play();\n    e.target.classList.add('down')\n  }\n    this.state.myArr.push(num)\n    this.setState({myArr:this.state.myArr})\n    let x = JSON.stringify(this.state.myArr);\n    let y = JSON.stringify(this.state.machineArr);\n    if(x===y && this.state.start){\n      let score = this.state.score+1;\n      this.setState({score:score})\n      setTimeout(() => {\n        this.playAudio()\n        // i=0;\n        this.setState({myArr:[]})\n       }, 2000);\n    }\n    if(x.length===y.length && x!==y){\n      this.setState({machineArr:[],gameover:true,myTurn:false,start:false})\n      audio.src=this.state.otherSounds[1]\n      audio.play()\n    }\n  }\n  upHnadler= (e)=>{\n    // audio.currentTime = 0\n    e.target.classList.remove('down')\n  }\n  \n startHandler = ()=>{\n  this.setState({score:0,machineArr:[],start:true,myTurn:false});\n  audio.src=this.state.otherSounds[0]\n  audio.play()\n  // if(this.state.machineArr.length===0){\n    \n  // }\n  setTimeout(() => {\n    this.playAudio();\n  }, 1000);\n}\nrender(){\n  // console.log(this.state);\n  return (\n      <div className='App'>\n          <div className='gameover' style={this.state.gameover?{display:'block'}:{display:'none'}}>\n            Gameover \n            <br /> Your Score: {this.state.score}\n            <br />\n            <button onClick={()=>{\n              this.setState({machineArr:[],myArr:[],score:0,gameover:false,start:false,myTurn:false});\n           }}\n            >Try again</button>\n            </div>\n\n              <button className='start' \n              style={this.state.gameover?{display:'none'}:{display:'block'}}\n              onClick={()=>{\n                this.startHandler();\n                // this.playAudio();\n              }}>\n                <h1>Start</h1> \n              <br />\n              {(this.state.start)?(this.state.myTurn?'Your turn':'PC turn'):'Hit the start!'} \n              </button>\n              <p className='score' style={this.state.gameover?{display:'none'}:{display:'block'}}>\n                Score: {this.state.score}</p>\n        \n          <div className=\"firstRow\">\n            <div className='items itemOne' id={this.state.divId[0]}   onMouseDown={this.downHnadler} onMouseUp={this.upHnadler}>\n            </div>\n            <div className='items itemTwo' id={this.state.divId[1]}  onMouseDown={this.downHnadler}onMouseUp={this.upHnadler}>         \n            </div>\n          </div>\n          <div className=\"secondRow\">\n            <div className='items itemThree' id={this.state.divId[2]}  onMouseDown={this.downHnadler} onMouseUp={this.upHnadler} >        \n            </div>\n            <div className='items itemFour' id={this.state.divId[3]} onMouseDown={this.downHnadler}onMouseUp={this.upHnadler} >        \n            </div>\n          </div>\n        \n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}