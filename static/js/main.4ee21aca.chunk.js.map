{"version":3,"sources":["containers/App.js","reportWebVitals.js","index.js"],"names":["num","btn","audio","Audio","i","App","state","play","style","myArr","machineArr","score","divId","src","playAudio","Math","floor","random","push","setState","setTimeout","playArrAudio","length","load","document","getElementById","classList","add","remove","addEventListener","downHnadler","e","target","indexOf","id","console","log","x","JSON","stringify","y","upHnadler","currentTime","className","this","display","onClick","onMouseDown","onMouseUp","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appTitle"],"mappings":"8KAEIA,EACAC,E,mFACAC,EAAQ,IAAIC,MACZC,EAAE,EA2HSC,E,4MAzHbC,MAAM,CACJC,MAAK,EAELC,MAAM,KACNC,MAAM,GACNC,WAAW,GACXC,MAAM,EACNC,MAAM,CAAC,QAAQ,OAAO,OAAO,UAC7BC,IAAI,CAAC,eAAe,eAAe,eAAe,iB,EAEnDC,UAAU,WACPd,EAAMe,KAAKC,MAAoB,EAAdD,KAAKE,UACvB,EAAKX,MAAMI,WAAWQ,KAAKlB,GAC3B,EAAKmB,SAAS,CAACT,WAAW,EAAKJ,MAAMI,aACnCN,EAAE,EACFgB,YAAW,WACT,EAAKC,iBAEJ,M,EAENA,aAAa,WACRjB,EAAE,EAAKE,MAAMI,WAAWY,SAChBpB,EAAMW,IAAM,EAAKP,MAAMO,IAAI,EAAKP,MAAMI,WAAWN,IACjDF,EAAMqB,OACLrB,EAAMK,QACLN,EAAMuB,SAASC,eAAe,EAAKnB,MAAMM,MAAM,EAAKN,MAAMI,WAAWN,MAClEsB,UAAUC,IAAI,QAClBP,YAAW,WACTnB,EAAIyB,UAAUE,OAAO,UACpB,KAEHxB,GAAK,GAEPF,EAAM2B,iBAAiB,QAAS,EAAKR,e,EAGrDS,YAAY,SAACC,GACX,GAAI,EAAKzB,MAAMC,KAAf,CACAwB,EAAEC,OAAON,UAAUC,IAAI,QACtB3B,EAAM,EAAKM,MAAMM,MAAMqB,QAAQF,EAAEC,OAAOE,IACxCC,QAAQC,IAAIpC,GACbE,EAAMW,IAAM,EAAKP,MAAMO,IAAIb,GAC3BE,EAAMK,OACJ,EAAKD,MAAMG,MAAMS,KAAKlB,GACtB,EAAKmB,SAAS,CAACV,MAAM,EAAKH,MAAMG,QAUhC,IAAI4B,EAAIC,KAAKC,UAAU,EAAKjC,MAAMG,OAC9B+B,EAAIF,KAAKC,UAAU,EAAKjC,MAAMI,YAElC,GADAyB,QAAQC,IAAIC,EAAEG,EAAEH,IAAIG,GACjBH,IAAIG,EAAE,CACP,IAAI7B,EAAQ,EAAKL,MAAMK,MAAM,EAC7B,EAAKQ,SAAS,CAACR,MAAMA,IACrBwB,QAAQC,IAAIzB,GACZS,YAAW,WACT,EAAKN,YAEL,EAAKK,SAAS,CAACV,MAAM,KACrB0B,QAAQC,IAAI,EAAK9B,MAAMG,SACrB,KAEH4B,EAAEf,QAAQkB,EAAElB,QAAUe,IAAIG,IAC3B,EAAKrB,SAAS,CAACZ,MAAK,IACpBL,EAAMW,IAAI,kBACVX,EAAMK,U,EAGVkC,UAAW,SAACV,GACV7B,EAAMwC,YAAc,EACnBX,EAAEC,OAAON,UAAUE,OAAO,S,4CAE7B,WAAS,IAAD,OACL,OACC,sBAAKe,UAAU,MAAf,UAEI,sBAAKA,UAAU,WAAWnC,MAAOoC,KAAKtC,MAAMC,KAAK,CAACsC,QAAQ,QAAQ,CAACA,QAAQ,SAA3E,qBAEE,uBAFF,gBAEsBD,KAAKtC,MAAMK,MAC/B,uBACA,wBAAQmC,QAAS,WACjB,EAAK3B,SAAS,CAACZ,MAAK,IACpB,EAAKY,SAAS,CAACR,MAAM,IAErB,EAAKQ,SAAS,CAACT,WADP,MAHR,0BASE,wBAAQiC,UAAU,QAClBnC,MAAOoC,KAAKtC,MAAMC,KAAK,CAACsC,QAAQ,SAAS,CAACA,QAAQ,QAClDC,QAAS,WACP,EAAKhC,aAHP,mBAKA,oBAAG6B,UAAU,QAAQnC,MAAOoC,KAAKtC,MAAMC,KAAK,CAACsC,QAAQ,SAAS,CAACA,QAAQ,QAAvE,oBACUD,KAAKtC,MAAMK,SAGzB,sBAAKgC,UAAU,WAAf,UACE,qBAAKA,UAAU,gBAAgBT,GAAIU,KAAKtC,MAAMM,MAAM,GAAKmC,YAAaH,KAAKd,YAAakB,UAAWJ,KAAKH,YAExG,qBAAKE,UAAU,gBAAgBT,GAAIU,KAAKtC,MAAMM,MAAM,GAAKmC,YAAaH,KAAKd,YAAYkB,UAAWJ,KAAKH,eAGzG,sBAAKE,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAkBT,GAAIU,KAAKtC,MAAMM,MAAM,GAAKmC,YAAaH,KAAKd,YAAakB,UAAWJ,KAAKH,YAE1G,qBAAKE,UAAU,iBAAiBT,GAAIU,KAAKtC,MAAMM,MAAM,GAAImC,YAAaH,KAAKd,YAAYkB,UAAWJ,KAAKH,sB,GAlHjGQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKC,SAAS,kBAEhBtC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.4ee21aca.chunk.js","sourcesContent":["import { Component } from 'react';\nimport'./App.css';\nlet num;\nlet btn;\nlet audio = new Audio()\nlet i=0;\nclass App extends Component {\n  state={\n    play:true,\n    // gameOver:false,\n    style:null,\n    myArr:[],\n    machineArr:[],\n    score:0,\n    divId:['zero0','one1','two2','three3'],\n    src:['assets/0.mp3','assets/1.mp3','assets/2.mp3','assets/3.mp3']\n   }\n   playAudio=()=>{\n      num = Math.floor(Math.random()*4)\n     this.state.machineArr.push(num)\n     this.setState({machineArr:this.state.machineArr})\n       i=0;\n       setTimeout(() => {\n         this.playArrAudio()\n         \n       }, 1000);\n    }\n    playArrAudio=()=>{\n      if(i<this.state.machineArr.length){\n                 audio.src = this.state.src[this.state.machineArr[i]]\n                 audio.load()\n                  audio.play();\n                   btn = document.getElementById(this.state.divId[this.state.machineArr[i]])\n                  btn.classList.add('down')\n                  setTimeout(() => {\n                    btn.classList.remove('down')\n                  }, 300);\n\n                  i =i+1;\n                 } \n                audio.addEventListener('ended', this.playArrAudio); \n   }            \n    \ndownHnadler=(e)=>{\n  if(!this.state.play){return}\n  e.target.classList.add('down')\n   num = this.state.divId.indexOf(e.target.id);\n   console.log(num);\n  audio.src = this.state.src[num]\n  audio.play()\n    this.state.myArr.push(num)\n    this.setState({myArr:this.state.myArr})\n    \n    //  for(let i of this.state.myArr ){\n    //   for(let j of this.state.machineArr){\n    //     if(i==j){\n          \n          \n    //      }\n    //   }\n    // }\n    let x = JSON.stringify(this.state.myArr);\n    let y = JSON.stringify(this.state.machineArr);\n    console.log(x,y,x===y);\n    if(x===y){\n      let score = this.state.score+1;\n      this.setState({score:score})\n      console.log(score);\n      setTimeout(() => {\n        this.playAudio()\n        // i=0;\n        this.setState({myArr:[]})\n        console.log(this.state.myArr);\n       }, 2000);\n    }\n    if(x.length==y.length && x!==y){\n      this.setState({play:false})\n      audio.src='assets/lost.wav'\n      audio.play()\n    }\n  }\n  upHnadler= (e)=>{\n    audio.currentTime = 0\n     e.target.classList.remove('down')\n }\n  render(){\n     return (\n      <div className='App'>\n        {/* <div className='play'> */}\n          <div className='gameover' style={this.state.play?{display:'none'}:{display:'block'}}>\n            Gameover \n            <br /> Your Score: {this.state.score}\n            <br />\n            <button onClick={()=>{\n            this.setState({play:true});\n            this.setState({score:0})\n            let x = [];\n            this.setState({machineArr:x})\n           }}\n            >Try again</button>\n            </div>\n\n              <button className='start' \n              style={this.state.play?{display:'block'}:{display:'none'}}\n              onClick={()=>{\n                this.playAudio();\n              }}>Start</button>\n              <p className='score' style={this.state.play?{display:'block'}:{display:'none'}}>\n                Score: {this.state.score}</p>\n         {/* </div>         */}\n        \n          <div className=\"firstRow\">\n            <div className='items itemOne' id={this.state.divId[0]}  onMouseDown={this.downHnadler} onMouseUp={this.upHnadler}>\n            </div>\n            <div className='items itemTwo' id={this.state.divId[1]}  onMouseDown={this.downHnadler}onMouseUp={this.upHnadler}>         \n            </div>\n          </div>\n          <div className=\"secondRow\">\n            <div className='items itemThree' id={this.state.divId[2]}  onMouseDown={this.downHnadler} onMouseUp={this.upHnadler} >        \n            </div>\n            <div className='items itemFour' id={this.state.divId[3]} onMouseDown={this.downHnadler}onMouseUp={this.upHnadler} >        \n            </div>\n          </div>\n        \n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App appTitle=\"Rumiani App\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}