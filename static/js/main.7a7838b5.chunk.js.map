{"version":3,"sources":["App.js","Gameover/Gameover.js","Loading/Loading.js","Information/Information.js","Squers/Squers.js","Play/Play.js","reportWebVitals.js","index.js"],"names":["num","btn","Gameover","props","className","style","gameover","display","score","newName","onClick","click","Loading","Information","useState","save","setSave","play","isPending","name","highestScore","type","placeholder","onChange","change","clickSave","fetch","method","headers","body","JSON","stringify","value","newScore","enterName","color","Squers","id","divId","Play","myTurn","i","App","state","myArr","machineArr","src","otherSounds","initialState","numberOftimes","computerPlay","Math","floor","random","push","setState","setTimeout","playArrAudio","audio","Audio","length","load","document","getElementById","classList","add","remove","addEventListener","userPlay","e","indexOf","target","currentTime","x","y","console","log","postHandler","playHandler","changeHandler","test","localStorage","setItem","saveHandler","componentDidMount","informationHandler","getItem","then","res","json","data","ArrOrig","Object","values","ArrScores","ArrSort","sort","a","b","ArrScoresForName","ArrNames","firstName","secondName","thirdName","slice","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a7838b5.chunk.js","sourcesContent":["import { Component } from 'react';\nimport'./App.css';\nimport Gameover from './Gameover/Gameover';\nimport Information from './Information/Information';\nimport Squers from './Squers/Squers';\nimport Play from './Play/Play';\n// import Loading from './Loading/Loading';\nlet num;\nlet btn;\n// let audio = new Audio()\nlet i=0;\nclass App extends Component {\n  state={\n    gameover:false,\n    play:false,\n    myTurn:false,\n    style:null,\n    myArr:[],\n    machineArr:[],\n    score:0,\n    divId:['blue','red','yellow','green'],\n    src:['assets/0.mp3','assets/1.mp3','assets/2.mp3','assets/3.mp3'],\n    otherSounds:['assets/play.wav','assets/lose.wav'],\n    initialState:this.state,\n    name:[],\n    highestScore:[],\n    newName:null,\n    enterName:false,\n    newScore:0,\n    isPending:false,\n    numberOftimes:0\n    //audio.load() for initial audio loading for client\n   }\n   computerPlay=()=>{\n      num = Math.floor(Math.random()*4)\n      this.state.machineArr.push(num)\n      this.setState({machineArr:this.state.machineArr,myTurn:false})\n      // console.log(this.state.machineArr);\n      i=0;\n      setTimeout(() => {\n        this.playArrAudio()\n      }, 500);\n  }\n  playArrAudio=()=>{\n    this.setState({play:true})\n    let audio = new Audio()\n    if(i<this.state.machineArr.length){\n      audio.src=this.state.src[this.state.machineArr[i]]\n      audio.load()\n      audio.play();\n      btn = document.getElementById(this.state.divId[this.state.machineArr[i]])\n      btn.classList.add('down')\n      setTimeout(() => {\n        btn.classList.remove('down')\n      }, 300);\n      i =i+1;\n    } \n    audio.addEventListener('ended', this.playArrAudio); \n      if(i===this.state.machineArr.length){\n        this.setState({myTurn:true})\n      }\n  }            \n\n  userPlay=(e)=>{\n    // if(this.state.gameover){return}\n    num = this.state.divId.indexOf(e.target.id);\n    let audio = new Audio(this.state.src[num])\n    audio.currentTime = 0\n     if(this.state.play && this.state.myTurn){\n      audio.play();\n      e.target.classList.add('down')\n    }\n    setTimeout(() => {\n      e.target.classList.remove('down')\n    }, 200);\n    this.state.myArr.push(num)\n    this.setState({myArr:this.state.myArr})\n    let x = JSON.stringify(this.state.myArr);\n    let y = JSON.stringify(this.state.machineArr);\n    if(x===y && this.state.play){\n      let score = this.state.score+1;\n      this.setState({score:score})\n      setTimeout(() => {\n          this.computerPlay()\n          // i=0;\n          this.setState({myArr:[]})\n        }, 1000);\n    }\n    if(x.length===y.length && x!==y){\n      this.gameover()\n    }\n  }\n  gameover =()=>{\n     let audioGmaeover = new Audio(this.state.otherSounds[1])\n  \n     audioGmaeover.play()\n\n       this.setState({machineArr:[],gameover:true,play:false,newScore:this.state.score})\n       console.log('scorePost: '+this.state.score);\n       setTimeout(() => {\n         console.log('scorePost: '+this.state.newScore);\n         this.postHandler()\n       }, 1000);\n  }\n  playHandler = ()=>{\n    this.setState({score:0,machineArr:[],play:true,myTurn:false,numberOftimes:this.state.numberOftimes+1});\n    console.log(this.state.numberOftimes);\n    let audio = new Audio(this.state.otherSounds[0])\n    audio.play()  \n    setTimeout(() => {\n      this.computerPlay();\n    }, 1000);\n  }\n  \n  changeHandler = (e)=>{\n    const re=/^[a-z A-Z]{3,10}$/i;\n    if(re.test(e.target.value)){\n      localStorage.setItem('name',e.target.value)\n      this.setState({enterName:true,newName:e.target.value})\n    }\n  }\n  saveHandler = ()=>{\n    if(this.state.enterName){\n      this.setState({newName:this.state.newName})\n    }\n    \n    \n  }\n \n  // get data from server(firebase.google)\n  componentDidMount = ()=>{\n      this.informationHandler()\n      let name= localStorage.getItem('name')\n      console.log(name);\n      this.setState({newName:name})\n    }\n  informationHandler = ()=>{\n    this.setState({isPending:true})\n    fetch('https://highestscores-7983d-default-rtdb.firebaseio.com/scores.json')\n      .then(res =>{\n        return res.json();\n      })\n      .then(data=>{\n        let ArrOrig = Object.values(data);\n        let ArrScores = []\n        for(let i of ArrOrig){\n          ArrScores.push(i.value)\n        }\n        let ArrSort = ArrScores.sort((a,b)=>b-a)\n        let ArrScoresForName = []\n        for(let i of ArrOrig){\n          ArrScoresForName.push(i.value)\n        }\n        let ArrNames=[]\n        for(let i of ArrOrig){\n          ArrNames.push(i.name)\n        }\n        let firstName = ArrNames[ArrScoresForName.indexOf(ArrSort[0])]\n        let secondName = ArrNames[ArrScoresForName.indexOf(ArrSort[1])]\n        let thirdName = ArrNames[ArrScoresForName.indexOf(ArrSort[2])]\n        \n        this.setState({highestScore:ArrSort.slice(0,3),name:[firstName,secondName,thirdName],isPending:false})\n        // console.log(Object.entries(data))\n        })\n      \n    }\n     postHandler= ()=>{\n      if(this.state.newName!=null){\n      //  console.log(this.state.newScore);\n      fetch('https://highestscores-7983d-default-rtdb.firebaseio.com/scores.json', {\n      method: 'POST', // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name:this.state.newName,value:this.state.newScore})      \n    })\n  }\n  }\n    render(){      \n      return (\n        <div className='App'>\n        <Gameover \n          gameover={this.state.gameover}\n          score={this.state.score}\n          newName={this.state.newName}\n          click={()=>{\n            this.setState({machineArr:[],myArr:[],\n              score:0,gameover:false,play:false,\n              myTurn:false});\n              this.informationHandler()\n            }}\n        />\n          \n              \n        {!this.state.play && !this.state.gameover?\n          <Information \n          enterName={this.state.enterName}\n          name={this.state.name} highestScore={this.state.highestScore} \n          newName={this.state.newName} clickSave={this.saveHandler}\n          change={this.changeHandler}\n          newScore={this.state.newScore}\n          isPending={this.state.isPending}/>\n          :null\n        }\n\n              \n        <Play \n          gameover={this.state.gameover} \n          play={this.state.play} \n          myTurn={this.state.myTurn} \n          score={this.state.score} \n          click={()=>{\n          this.playHandler();\n        }}\n        />\n        <Squers \n        click={this.userPlay} \n        divId={this.state.divId} \n        />\n          \n        \n      </div>\n    );\n  }\n}\nexport default App;","import './Gameover.css'\r\nconst Gameover = (props) => {\r\n    return ( \r\n        <div className='gameover' style={props.gameover?{display:'block'}:{display:'none'}}>\r\n            <strong>Gameover </strong>\r\n            <br /> <strong>Your Score: {props.score}</strong>\r\n            <br />\r\n            {props.newName==null?\"Since you didn't enter your name, your score hasn't been recorded\":'Your score has been recorded'}\r\n            <br />\r\n            <button onClick={props.click}\r\n            ><strong>Try again</strong></button>\r\n          </div>\r\n     );\r\n}\r\n \r\nexport default Gameover;","import './Loading.css'\r\nconst Loading = () => {\r\n    return ( \r\n        <div className='spinner'>\r\n\r\n    <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div> \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Loading;","import { useState } from 'react';\r\nimport Loading from '../Loading/Loading';\r\nimport './Information.css'\r\nconst Information = (props) => {\r\nconst[save,setSave]=useState(false)\r\n\r\n\r\nconst postHandler= ()=>{\r\n  fetch('https://highestscores-7983d-default-rtdb.firebaseio.com/scores.json', {\r\n  method: 'POST', // or 'PUT'\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({name:props.newName,value:props.newScore})\r\n  // body: {name:`${this.state.newName}`,value:newScore},\r\n  \r\n})\r\n// .then(response => response.json())\r\n// .then(data => {\r\n//   console.log('Success:', data);\r\n// })\r\n// .catch((error) => {\r\n//   console.error('Error:', error);\r\n// });\r\n}\r\n\r\n\r\n\r\n    return ( <div className='tips' style={props.play?{display:'none'}:{display:'block'}}>\r\n    Hey <strong>{props.newName==null?'you':props.newName}</strong>!\r\n    <br />\r\n    <p>Repeat the color sequence! </p>\r\n      \r\n      <div className='scores'>{props.isPending?<Loading/>:<strong><ol>HighestScores:\r\n                  <li>{props.name[0]}: {props.highestScore[0]}</li>\r\n                  <li>{props.name[1]}: {props.highestScore[1]}</li>\r\n                  <li>{props.name[2]}: {props.highestScore[2]}</li>\r\n                </ol>\r\n          </strong>}</div>\r\n        Enter your name to record your score \r\n       <div className='inputName'>\r\n        <br />\r\n        <input  type=\"text\" placeholder='enter your name' onChange={props.change} />\r\n        <button \r\n        onClick={()=>{\r\n            props.clickSave(); \r\n            setSave(!save);\r\n            postHandler();}\r\n            }>\r\n            {props.enterName&&save?'saved':'save'}</button>\r\n      </div>\r\n      <p style={{color:'red',display:props.enterName?'none':'block'}}>Please enter 3-10 characters.</p>\r\n      </div> );\r\n}\r\n\r\nexport default Information;","import './Squers.css'\r\nconst Squers = (props) => {\r\n    return ( \r\n        <div>\r\n            <div className=\"firstRow\">\r\n            <div className='items itemOne' id={props.divId[0]}    onClick={props.click} >\r\n            </div>\r\n            <div className='items itemTwo' id={props.divId[1]}  onClick={props.click}>         \r\n            </div>\r\n          </div>\r\n          <div className=\"secondRow\">\r\n            <div className='items itemThree' id={props.divId[2]}  onClick={props.click}  >        \r\n            </div>\r\n            <div className='items itemFour' id={props.divId[3]} onClick={props.click} >        \r\n            </div>\r\n          </div>\r\n        </div>\r\n     );\r\n}\r\n \r\n\r\nexport default Squers;","import './Play.css'\r\nconst Play = (props) => {\r\n    return ( \r\n        <div>\r\n            <button className='play' \r\n        style={props.gameover?{display:'none'}:{display:'block'}}\r\n        onClick={props.click}>\r\n          <h1>{props.play?'Restart':'Play'}</h1> \r\n        <br />\r\n        {(props.play)?(props.myTurn?'Your turn':'PC turn'):''} \r\n        </button>\r\n        <p className='score' style={props.gameover?{display:'none'}:{display:'block'}}>\r\n          Score: {props.score}</p></div>\r\n     );\r\n}\r\n \r\nexport default Play;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}